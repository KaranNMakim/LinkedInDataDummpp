# -*- coding: utf-8 -*-
"""LinkedIn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wmaFao-ZcNhW9Rptt1N7RekxoiFr9juO
"""

!pip install linkedin_api

from linkedin_api import Linkedin

# Authenticate using any Linkedin account credentials
api = Linkedin(<linkedin email>, <password>)

# GET a profile

from google.colab import drive
drive.mount('/content/drive')

!pip install linkedin-api

profile = api.get_profile('karanmakim')
#print(profile)

lp=api.search_people("Karan")

def get_detail(x,y):
    s=''
    try:
        s=x[y]
    except:
        s=''
    return s

def get_experience(x):
    exp=pd.DataFrame(columns=['public_id','companyName','title','company','timePeriod','industries'])
    for y in x['experience']:
        public_id=get_detail(x,'public_id')
        companyName=get_detail(y,'companyName')
        title=get_detail(y,'title')
        company=get_detail(y,'company')
        timePeriod=get_detail(y,'timePeriod')
        industries=get_detail(y,'industries')
        l1=pd.Series([public_id,companyName,title,company,timePeriod,industries],index=exp.columns)
        exp=exp.append(l1,ignore_index=True)
    return exp

import pandas as pd
exper=pd.DataFrame(columns=['public_id','companyName','title','company','timePeriod','industries'])
i=0
for name in lp:
    try:
        p=api.get_profile(name['public_id'])
        exper=exper.append(get_experience(p))
    except:
        continue

def get_edu(x):
    exp=pd.DataFrame(columns=['public_id','schoolName','degreeName','fieldOfStudy','timePeriod','description'])
    for y in x['education']:
        public_id=get_detail(x,'public_id')
        schoolName=get_detail(y,'companyName')
        degreeName=get_detail(y,'title')
        fieldOfStudy=get_detail(y,'company')
        timePeriod=get_detail(y,'timePeriod')
        description=get_detail(y,'industries')
        l1=pd.Series([public_id,schoolName,degreeName,fieldOfStudy,timePeriod,description],index=exp.columns)
        exp=exp.append(l1,ignore_index=True)
    return exp

import pandas as pd
edu=pd.DataFrame(columns=['public_id','schoolName','degreeName','fieldOfStudy','timePeriod','description'])
i=0
for name in lp:
    try:
        p=api.get_profile(name['public_id'])
        edu=edu.append(get_edu(p))
    except:
        continue
print(edu)



exper.to_csv("Karan_exper.csv")

edu.to_csv('Karan_edu.csv')

import pandas as pd
lp1=pd.DataFrame(columns=['summary','lastName','firstName','locationName','geoLocationName','headline','student','industryName'])
i=0
for name in lp:
    try:
        p=api.get_profile(name['public_id'])
        summary=get_detail(p,'summary')
        lastName=get_detail(p,'lastName')
        firstName=get_detail(p,'firstName')
        locationName=get_detail(p,'locationName')
        geoLocationName=get_detail(p,'geoLocationName')
        headline=get_detail(p,'headline')
        student=get_detail(p,'student')
        industryName=get_detail(p,'industryName')
        #k=[p['summary'],p['lastName'],p['firstName'],p['locationName'],p['geoLocationName'],p['headline'],p['student'],p['industryName']]
        k=[summary,lastName,firstName,locationName,geoLocationName,headline,student,industryName]
        k=pd.Series(k,index=lp1.columns)
        lp1=lp1.append(k,ignore_index=True)
    except:
        continue
    i=i+1
    #print(i)
print(lp1)

lp1.to_csv('Karan_profiles.csv')

skills=pd.DataFrame(columns=['public_id','skills'])
i=0
for t in lp:
    sk1=api.get_profile_skills(t['public_id'])
    lo=pd.Series([t['public_id'],sk1],index=skills.columns)
    skills=skills.append(lo,ignore_index=True)
    i=i+1
    #print(i)
print(skills)

skills=skills.explode('skills')

skills.to_csv('Karan_skills.csv')

skills